/**********************************************************************************************************************
 * \file diagnosticsdata.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 * 
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of 
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and 
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all 
 * derivative works of the Software, unless such copies or derivative works are solely in the form of 
 * machine-executable object code generated by a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE 
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
 * IN THE SOFTWARE.
 *********************************************************************************************************************/

#ifndef BSW_SERVICE_DIAGNOSTICS_DIAGNOSTICSDATA_H_
#define BSW_SERVICE_DIAGNOSTICS_DIAGNOSTICSDATA_H_

/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
#include "Ifx_Types.h"
#include <stdint.h>
#include <stdbool.h>

/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
/*********************************************************************************************************************/
#define MAX_PERIODIC_TASKS 5    // 주기적 전송 작업 관리 배열

/*********************************************************************************************************************/
/*-------------------------------------------------Data Structures---------------------------------------------------*/
/*********************************************************************************************************************/
typedef enum {
   UDS_DID_TOF_SENSOR = 0x1000,
   UDS_DID_LEFT_ULTRASONIC_SENSOR = 0x2000,
   UDS_DID_RIGHT_ULTRASONIC_SENSOR = 0x2001,
   UDS_DID_REAR_ULTRASONIC_SENSOR = 0x2002,
   UDS_DID_AEB_REMOTE_MASTER_SWITCH = 0X3000,

   // Standard DIDs (F1xx range)
   UDS_DID_ACTIVE_DIAGNOSTIC_SESSION = 0xF186,
   UDS_DID_VEHICLE_MANUFACTURER_ECU_PART_NUMBER = 0xF187,
   UDS_DID_ECU_SERIAL_NUMBER = 0xF18C,
   UDS_DID_VEHICLE_IDENTIFICATION_NUMBER = 0xF190,
   UDS_DID_ECU_SUPPLIER_INFORMATION = 0xF192,
   UDS_DID_ECU_MANUFACTURING_DATE = 0xF193,

   // DID for listing supported DIDs
   UDS_DID_SUPPORTED_DIDS_LIST = 0xF1A0
} UDS_DataIdentifier;

typedef struct {
    uint16_t did;               // 관리할 실제 데이터의 DID (UDS_DID 타입)
    uint16_t intervalMs;        // 전송 주기
    uint8_t isActive;           // 활성화 여부
    volatile uint32_t timer;    // 타이머
} PeriodicTransmission;

// 시스템의 모든 설정값을 모아둘 구조체
typedef struct {
    bool isAebEnabled; // AEB ON/OFF
    char partNumber[20]; // ECU 하드웨어 부품 번호
    char serialNumber[20]; // ECU 고유 시리얼 번호
    char vin[18]; // 차대번호
    char manufacturingDate[11]; // ECU 제조 날짜
    char supplier[20]; // ECU 공급업체
} SystemConfig;

/*********************************************************************************************************************/
/*-------------------------------------------------Global variables--------------------------------------------------*/
/*********************************************************************************************************************/
extern PeriodicTransmission g_periodicTasks[MAX_PERIODIC_TASKS];

// '설정값 변수가 있다'고 외부에 알리는 선언 (extern) 실제는 .c파일에 존재
extern SystemConfig g_config;
// 지원 DID 목록 배열이 외부에 존재한다고 선언
extern uint16 SUPPORTED_DIDS[];
// 지원 DID 개수도 외부에 존재한다고 선언
extern uint8 NUM_SUPPORTED_DIDS;

/*********************************************************************************************************************/
/*--------------------------------------------Private Variables/Constants--------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------Function Prototypes------------------------------------------------*/
/*********************************************************************************************************************/
void UDS_HandlePeriodicTransmission(void);
void config_init(void);


#endif /* BSW_SERVICE_DIAGNOSTICS_DIAGNOSTICSDATA_H_ */
