/**********************************************************************************************************************
 * \file dtc.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 * 
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of 
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and 
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all 
 * derivative works of the Software, unless such copies or derivative works are solely in the form of 
 * machine-executable object code generated by a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE 
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
 * IN THE SOFTWARE.
 *********************************************************************************************************************/

#ifndef BSW_SERVICE_DIAGNOSTICS_DTC_H_
#define BSW_SERVICE_DIAGNOSTICS_DTC_H_

/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
#include "Ifx_Types.h"
#include <stdbool.h>

/*********************************************************************************************************************/
/*------------------------------------------------------Macros-------------------------------------------------------*/
/*********************************************************************************************************************/
#define MAX_DTCS 10

// 진단할 DTC 코드 정의
typedef enum {
    // Tof 센서
    UDS_DTC_TOF_TIMEOUT     = 0xC10000, // U0100: ToF 센서 통신 두절
    UDS_DTC_TOF_OUTOFRANGE  = 0x810000, // B0100: ToF 센서 측정값 범위 초과

    // 초음파 센서(좌)
    UDS_DTC_ULT_LEFT_TIMEOUT    = 0xC20000, // U0200 : Left_Ultrasonic 센서 통신 두절
    UDS_DTC_ULT_LEFT_OUTOFRANGE = 0x820000, // B0200 : Left_Ultrasonic 센서 측정값 범위 초과

    // 초음파 센서(우)
    UDS_DTC_ULT_RIGHT_TIMEOUT    = 0xC20001, // U0201 : Right_Ultrasonic 센서 통신 두절
    UDS_DTC_ULT_RIGHT_OUTOFRANGE = 0x820001, // B0201 : Right_Ultrasonic 센서 측정값 범위 초과

    // 초음파 센서(후방)
    UDS_DTC_ULT_REAR_TIMEOUT    = 0xC20002, // U0202 : Rear_Ultrasonic 센서 통신 두절
    UDS_DTC_ULT_REAR_OUTOFRANGE = 0x820002  // B0202 : Rear_Ultrasonic 센서 측정값 범위 초과
} UDS_DiagnosticTroubleCode;

// DTC 상태 비트 마스크 정의
#define DTC_STATUS_TEST_FAILED (1 << 0)

/*********************************************************************************************************************/
/*-------------------------------------------------Data Structures---------------------------------------------------*/
/*********************************************************************************************************************/
// DTC 기록을 저장할 구조체
typedef struct {
    uint32 dtc_code;
    uint8  status;
} DtcRecord;

/*********************************************************************************************************************/
/*-------------------------------------------------Global variables--------------------------------------------------*/
/*********************************************************************************************************************/
extern DtcRecord g_dtcStorage[MAX_DTCS];

/*********************************************************************************************************************/
/*--------------------------------------------Private Variables/Constants--------------------------------------------*/
/*********************************************************************************************************************/

/*********************************************************************************************************************/
/*------------------------------------------------Function Prototypes------------------------------------------------*/
/*********************************************************************************************************************/
void dtc_updateStatus(uint32 dtc_code, bool is_faulty);


#endif /* BSW_SERVICE_DIAGNOSTICS_DTC_H_ */
